<%- include('../../layouts/header') %>

    <div class="page-heading">
        <div class="page-title">
            <div class="row">
                <!-- Card header -->
                <div class="col-6 col-md-6 col-sm-12 order-md-1 order-last">
                    <div class="row">
                        <div class="col-2 col-md-3 col-sm-12 order-md-1 order-last">
                            <h3>Category Menus</h3>
                        </div>
                    </div>
                </div>
                <div class="col-6 col-md-6 col-sm-12 order-md-2 order-last">

                    <div class="buttons float-end">
                        <button class="btn btn-dark" data-bs-toggle="modal" data-bs-target="#addCategoryMenuModel">
                            <i class="fas fa-plus">&nbsp;</i>
                            Add Category Menu</button>
                    </div>
                    <a style="float: right;color: #000000;" class="me-2" href="/admin/categories">
                        <i class="fa fa-arrow-circle-left" aria-hidden="true" style="font-size: x-large;"></i>
                        <m style="font-size: x-large; font-weight: 600;"> Back</m>
                    </a>
                </div>
            </div>
        </div>

        <section class="section">
            <div class="card">
                <div class="card-header" style="text-transform: capitalize;">
                    Category Menus
                </div>
                <div class="card-body">
                    <table class="table table-striped" id="dataTable" style="width:100%;">
                        <thead>
                            <tr>
                                <th>Id</th>
                                <th>Name </th>
                                <th>Image</th>
                                <th>Background Color</th>
                                <th>Font Color</th>
                                <th>Sub Category</th>
                                <th>Action</th>
                                <th>Sub Category</th>
                            </tr>
                        </thead>
                        <tbody>
                        </tbody>
                    </table>
                </div>
            </div>
        </section>

        <div class="modal fade text-left" id="addCategoryMenuModel" tabindex="-1" role="dialog"
            aria-labelledby="myModalLabel33" aria-hidden="true">
            <div class="modal-dialog modal-dialog-centered modal-dialog-scrollable" role="document">
                <div class="modal-content" style="overflow: scroll;">
                    <div class="modal-header">
                        <h4 class="modal-title" id="myModalLabel33">Add Category Menu</h4>
                        <button type="button" class="close" data-bs-dismiss="modal" aria-label="Close">
                            <i data-feather="x"></i>
                        </button>
                    </div>
                    <form action="#" id="addCategoryMenuForm">
                        <div class="modal-body">
                            <input type="hidden" id="category_id" name="category_id" class="form-control"
                                value="<%= category_id %>">
                            <div class="form-group">
                                <label>Name: </label>
                                <input type="text" placeholder="Enter name" id="name" name="name" class="form-control"
                                    required>
                                <p class="text-danger" id="err-name" style=" color: #9f0606; display: none">name is
                                    required
                                </p>
                            </div>
                            <label>Image: </label>
                            <div class="form-group">
                                <input type="file" placeholder="Enter image" name="image" id="image"
                                    class="form-control" accept="image/x-png,image/gif,image/jpeg"
                                    onchange="handlePickImage(1)">
                                <p class="text-danger" id="err-image" style="color: #9f0606; display: none">
                                    image is required
                                </p>
                                <img class="img-fluid mt-3" id="imageAtCreate" style="width:200px;" />
                            </div>
                            <div class="form-group">
                                <label>Background Color: </label>
                                <input type="color" placeholder="Enter background color" name="bg_color" id="bg_color"
                                    class="form-control">
                                <p class="text-danger" id="err-bg_color" style="color: #9f0606; display: none">
                                    background color is
                                    required</p>
                            </div>
                            <div class="form-group">
                                <label>Font Color: </label>
                                <input type="color" placeholder="Enter font color" name="font_color" id="font_color"
                                    class="form-control">
                                <p class="text-danger" id="err-font_color" style="color: #9f0606; display: none">font
                                    color is required</p>
                            </div>
                            <div class="form-group">
                                <label>Sub Category</label>
                                <label class="toggle">
                                    <input class="toggle-checkbox custom-checkbox" type="checkbox" name="is_subcategory"
                                        id="is_subcategory">
                                    <div class="toggle-switch"></div>
                                    <span class="toggle-label"></span>
                                </label>
                            </div>
                        </div>
                        <div class="modal-footer">
                            <button type="reset" class="btn btn-light-secondary" data-bs-dismiss="modal">

                                <span>Close</span>
                            </button>
                            <button type="submit" class="btn btn-dark" id="addCategoryMenuButton">

                                <span>Add</span>
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>

        <div class="modal fade text-left" id="updateCategoryMenuModel" tabindex="-1" role="dialog"
            aria-labelledby="myModalLabel33" aria-hidden="true">
            <div class="modal-dialog modal-dialog-centered modal-dialog-scrollable" role="document">
                <div class="modal-content" style="overflow: scroll;">
                    <div class="modal-header">
                        <h4 class="modal-title" id="myModalLabel33">Update Category Menu</h4>
                        <button type="button" class="close" data-bs-dismiss="modal" aria-label="Close">
                            <i data-feather="x"></i>
                        </button>
                    </div>
                    <form action="#" id="updateCategoryMenuForm">
                        <div class="modal-body">
                            <input type="hidden" id="up-category_id" name="category_id" class="form-control"
                                value="<%= category_id %>">
                            <div class="form-group">
                                <label>Name: </label>
                                <input type="text" placeholder="Enter name" id="up-name" name="name"
                                    class="form-control" required>
                            </div>
                            <div class="form-group">
                                <label>Image: </label>
                                <input type="file" placeholder="Enter image" name="image" id="up-image"
                                    class="form-control" accept="image/x-png,image/gif,image/jpeg"
                                    onchange="handlePickImage(2)">
                                <img id="showImage" style="width:200px;height: 200px;" />
                            </div>
                            <div class="form-group">
                                <label>Background Color: </label>
                                <input type="color" placeholder="Enter background color" name="bg_color"
                                    id="up-bg_color" class="form-control">
                            </div>
                            <div class="form-group">
                                <label>Font Color: </label>
                                <input type="color" placeholder="Enter font color" name="font_color" id="up-font_color"
                                    class="form-control">
                            </div>
                            <div class="form-group">
                                <label>Sub Category</label>
                                <label class="toggle">
                                    <input class="toggle-checkbox custom-checkbox" type="checkbox" name="is_subcategory"
                                        id="up-is_subcategory">
                                    <div class="toggle-switch"></div>
                                    <span class="toggle-label"></span>
                                </label>
                            </div>
                            <input name="id" type="hidden" id="id">
                        </div>
                        <div class="modal-footer">
                            <button type="reset" class="btn btn-light-secondary" data-bs-dismiss="modal">

                                <span>Close</span>
                            </button>
                            <button type="submit" class="btn btn-dark" id="updateCategoryMenuButton">

                                <span>Update</span>
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>

    </div>

    <script>
        function toggleHandler(id, checked) {

            const is_subcategory = $('#up-is_subcategory').val()

            fetch(`/admin/categories/menus/is_subcategory/${id}`, {
                method: "PATCH",
                body: JSON.stringify({ "is_subcategory": true }),
                mode: 'cors',
                cache: 'no-cache',
            })
                .then(async function (res) {
                    const data = await res.json()
                    if (data.success) {
                        Toastify({
                            text: "subcategory updated successfully.",
                            duration: 1000,
                            close: true,
                            gravity: "top",
                            position: "right",
                            backgroundColor: "rgb(31 191 95)",
                        }).showToast();
                        $('#dataTable').DataTable().ajax.reload();
                    }
                    else {
                        Swal.fire({
                            icon: "error",
                            title: "Oops...",
                            text: "Something is wrong",
                            confirmButtonColor: "#000000",
                        })
                    }
                })
                .catch(function (res) {
                    console.log(res);
                    Swal.fire({
                        icon: "error",
                        title: "Oops...",
                        text: "Something is wrong",
                        confirmButtonColor: "#000000",
                    })
                })
        }


        function handlePickImage(pickFor) {
            let reader = new FileReader();
            switch (pickFor) {
                case 1:
                    reader.readAsDataURL(document.getElementById('image').files[0]);
                    reader.onload = function (e) {
                        document.getElementById('imageAtCreate').src = e.target.result;
                    }
                    break;
                case 2:
                    reader.readAsDataURL(document.getElementById('up-image').files[0]);
                    reader.onload = function (e) {
                        document.getElementById('showImage').src = e.target.result;
                    }
            }
        }

        $(document).ready(function () {
            var table = $('#dataTable').DataTable({
                paging: true,
                responsive: true,
                searching: true,
                ajax: {
                    type: "GET",
                    url: "/admin/categories/menus/data/<%- category_id %>",
                    dataSrc: "data",
                },
                columns: [
                    {
                        "data": null,
                        "render": function (data, type, full, meta) {
                            return meta.row + 1
                        }
                    },
                    {
                        "data": 'name'
                    },
                    {
                        "data": 'image',
                        render: function (data) {
                            return '<img src="' + data + '" style="width:100px;height: 75px;">'
                        }
                    },
                    {
                        "data": 'bg_color'
                    },
                    {
                        "data": 'font_color'
                    },
                    {
                        "data": null,
                        render: function (data, type, row) {
                            const isChecked = row.is_subcategory === true;

                            let content = '<td><div class="d-flex">';
                            content += `<label class="toggle"><input class="toggle-checkbox data-toggle" id="${row.id}" type="checkbox" name="is_subcategory" ${isChecked ? 'checked' : ''}>`;
                            content += `<div class="toggle-switch custom-data-checked" onclick="toggleHandler(${row.id},${isChecked})"></div>`;
                            content += '<span class="toggle-label"></span></label>';
                            content += '</div></td>';
                            return content;
                        }
                    },
                    {
                        "data": null,
                        render: function (data, type, row) {
                            let content = `<td><div class="d-flex">`
                            content = content +
                                '<a href="#"  class="edit" data-value ="' + row.id + '" data-bs-toggle="modal" data-bs-target="#updateCategoryMenuModel"><i class="fas fa-edit" style="color: #000000;"></i></a>'
                            content = content +
                                '<a href="#"  class="delete" data-value ="' + row.id + '" style="margin-left: 30px;"><i class="fa-regular fa-trash-can" aria-hidden="true"  style="color: red;"></i></a>'
                            content = content + `</div></td>`
                            return content
                        }
                    },
                    {
                        "data": null,
                        render: function (data, type, row) {
                            let content = `<td><div class="d-flex">`
                            if (row.is_subcategory) {
                                content = content +
                                    `<a href="/admin/category-menus/${row.id}"  class="view" style = "color: blue;" > view subcategory</a >`
                            } else {
                                content = content +
                                    `<a href="/admin/content?category_menu_id=${row.id}"  class="view" style = "color: blue;" > view content</a >`

                            }
                            content = content + `</div ></td > `
                            return content
                        }
                    }
                ]
            });

            $(".custom-checkbox").on('change', function () {
                if ($(this).is(':checked')) {
                    $(this).attr('value', 'true');
                }
                else {
                    $(this).attr('value', 'false');
                }
            });

            $('#addCategoryMenuButton').click(function (e) {
                e.preventDefault();

                const category_id = $('#category_id').val()
                const name = $('#name').val()
                const image = $('#image')
                const bg_color = $('#bg_color').val()
                const font_color = $('#font_color').val()
                const is_subcategory = $('#is_subcategory').val()

                var form = $('#addCategoryMenuForm')[0];
                var formData = new FormData(form);

                fetch(`/admin/categories/menus`,
                    {
                        method: "POST",
                        body: formData,
                        mode: 'cors',
                        cache: 'no-cache',
                    })
                    .then(async function (res) {
                        const data = await res.json()
                        if (data.success) {
                            $('#addCategoryMenuModel').modal('hide');
                            Swal.fire({
                                icon: "success",
                                title: "Success",
                                text: "category menu added successfully.",
                                timer: 1000,
                                showConfirmButton: false
                            })
                            table.ajax.reload();
                        }
                        else {
                            Swal.fire({
                                icon: "error",
                                title: "Oops...",
                                text: "Something is wrong",
                                confirmButtonColor: "#000000",
                            })
                        }
                    })
                    .catch(function (res) {
                        console.log(res);
                        Swal.fire({
                            icon: "error",
                            title: "Oops...",
                            text: "Something is wrong",
                            confirmButtonColor: "#000000",
                        })
                    })
            })

            $('#addCategoryMenuModel').on('show.bs.modal', function (event) {
                $("#addCategoryMenuForm").trigger("reset");
                $('#image').val("")
            })
            $('#updateCategoryMenuModel').on('show.bs.modal', function (event) {
                $('#up-image').val("")
            })
        })

        $(document).on('click', '.edit', function (e) {
            e.preventDefault()
            var categoryMenuId = $(this).data('value')
            fetch(`/admin/categories/menus/view/${categoryMenuId}`)
                .then(response => response.json())
                .then((data) => {
                    const { id, category_id, name, image, bg_color, font_color, is_subcategory } = data.data
                    $('#id').val(id)
                    $('#up-category_id').val(category_id)
                    $('#up-name').val(name)
                    $('#showImage').prop("src", image);
                    $('#up-bg_color').val(bg_color)
                    $('#up-font_color').val(font_color)
                    if (is_subcategory) {
                        $("#up-is_subcategory").prop("checked", true);
                    } else {
                        $("#up-is_subcategory").prop("checked", false);
                    }
                })
                .catch((err) => console.log(err))
        })

        $('#updateCategoryMenuButton').click(function (e) {
            e.preventDefault();

            const categoryMenuId = $('#id').val()
            const name = $('#up-name').val()
            const image = $('#up-image')
            const bg_color = $('#up-bg_color').val()
            const font_color = $('#up-font_color').val()
            const is_subcategory = $('#up-is_subcategory').val()
            var form = $('#updateCategoryMenuForm')[0];
            var formData = new FormData(form);


            fetch(`/admin/categories/menus/${categoryMenuId}`, {
                method: "PUT",
                body: formData,
                mode: 'cors',
                cache: 'no-cache',
            })
                .then(async function (res) {
                    const data = await res.json()
                    if (data.success) {
                        $('#updateCategoryMenuModel').modal('hide');
                        Toastify({
                            text: "category menu updated successfully.",
                            duration: 1000,
                            close: true,
                            gravity: "top",
                            position: "right",
                            backgroundColor: "rgb(31 191 95)",
                        }).showToast();
                        $('#dataTable').DataTable().ajax.reload();
                    }
                    else {
                        Swal.fire({
                            icon: "error",
                            title: "Oops...",
                            text: "Something is wrong",
                            confirmButtonColor: "#000000",
                        })
                    }
                })
                .catch(function (res) {
                    console.log(res);
                    Swal.fire({
                        icon: "error",
                        title: "Oops...",
                        text: "Something is wrong",
                        confirmButtonColor: "#000000",
                    })
                })
        })

        $(document).on('click', '.delete', function () {
            const id = $(this).data('value')

            Swal.fire({
                title: "Are you sure about deleting this category menu?",
                icon: "warning",
                showCancelButton: true,
                confirmButtonText: "Delete",
                confirmButtonColor: "#000000",
                cancelButtonColor: "#999999",
                reverseButtons: true,
                focusConfirm: false,
                focusCancel: true,
            })
                .then((e) => {
                    if (e.isConfirmed) {
                        fetch(`/admin/categories/menus/${id}`,
                            {
                                method: "DELETE",
                                mode: 'cors',
                                cache: 'no-cache',
                                headers: {
                                    'Content-Type': 'application/json'
                                },
                            })
                            .then(async function (res) {
                                const data = await res.json()
                                if (data.success) {
                                    Toastify({
                                        text: "category menu deleted successfully.",
                                        duration: 1000,
                                        close: true,
                                        gravity: "top",
                                        position: "right",
                                        backgroundColor: "rgb(245 90 90)",
                                    }).showToast();
                                    $('#dataTable').DataTable().ajax.reload();
                                }
                                else {
                                    Swal.fire({
                                        icon: "error",
                                        title: "Oops...",
                                        text: "Something is wrong",
                                        confirmButtonColor: "#000000",
                                    })
                                }
                            })
                            .catch(function (res) {
                                console.log(res);
                                Swal.fire({
                                    icon: "error",
                                    title: "Oops...",
                                    text: "Something is wrong",
                                    confirmButtonColor: "#000000",
                                })
                            })
                    }
                })
        })

    </script>


    <%- include('../../layouts/footer') %>