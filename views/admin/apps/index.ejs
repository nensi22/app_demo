<%- include('../layouts/header') %>
  <div class="page-heading">
    <div class="page-title">
      <div class="row">
        <div class="col-6 col-md-6 col-sm-12 order-md-1 order-last">
          <div class="row">
            <div class="col-2 col-md-3 col-sm-12 order-md-1 order-last">
              <h3>Apps</h3>
            </div>
          </div>
        </div>
        <div class="col-6 col-md-6 col-sm-12 order-md-2 order-last">
          <div class="buttons float-end">
            <button class="btn btn-dark" data-bs-toggle="modal" data-bs-target="#addAppModel">
              <i class="fas fa-plus">&nbsp;</i>
              Add App
            </button>
          </div>
        </div>
      </div>
    </div>
    <section class="section">
      <div class="card">
        <div class="card-header" style="text-transform: capitalize;">
          Apps
        </div>
        <div class="card-body">
          <table class="table table-striped" id="dataTable" style="width:100%;">
            <thead>
              <tr>
                <th>Id</th>
                <th>Name</th>
                <th>Image</th>
                <th>Splash Slider Color</th>
                <th>Splash Slider Font Color</th>
                <th>Splash Slider Inactive Color</th>
                <th>Adds</th>
                <th>View Adds</th>
                <th>Active</th>
                <th>Action</th>
              </tr>
            </thead>
            <tbody>
            </tbody>
          </table>
        </div>
      </div>
    </section>

    <div class="modal fade text-left" id="addAppModel" tabindex="-1" role="dialog" aria-labelledby="myModalLabel33"
      aria-hidden="true">
      <div class="modal-dialog modal-dialog-centered modal-dialog-scrollable" role="document">
        <div class="modal-content" style="overflow: scroll;">
          <div class="modal-header">
            <h4 class="modal-title" id="myModalLabel33">Add App</h4>
            <button type="button" class="close" data-bs-dismiss="modal" aria-label="Close">
              <i data-feather="x"></i>
            </button>
          </div>
          <form action="#" id="addAppForm">
            <div class="modal-body">
              <div class="form-group">
                <label>Name: </label>
                <input type="text" placeholder="Enter app name" id="name" name="name" class="form-control" required>
                <p class="text-danger" id="err-name" style=" color: #9f0606; display: none">name is
                  required
                </p>
              </div>
              <label>Image: </label>
              <div class="form-group">
                <input type="file" placeholder="Enter app image" name="image" id="image" class="form-control"
                  accept="image/x-png,image/gif,image/jpeg" onchange="handlePickImage(1)">
                <p class="text-danger" id="err-image" style="color: #9f0606; display: none">
                  image is required
                </p>
                <img class="img-fluid mt-3" id="imageAtCreate" style="width:200px;" />
              </div>
              <div class="form-group">
                <label class="switch">Sidebar</label>
                <label class="toggle">
                  <input class="toggle-checkbox custom-checkbox" type="checkbox" name="is_sidebar" id="is_sidebar">
                  <div class="toggle-switch"></div>
                  <span class="toggle-label"></span>
                </label>
              </div>
              <div class="form-group">
                <label class="switch">Bottombar</label>
                <label class="toggle">
                  <input class="toggle-checkbox custom-checkbox" type="checkbox" name="is_bottombar" id="is_bottombar">
                  <div class="toggle-switch"></div>
                  <span class="toggle-label"></span>
                </label>
              </div>
              <div class="form-group">
                <label>Splash Slider Color: </label>
                <input type="color" name="splash_slider_color" id="splash_slider_color" class="form-control">
                <p class="text-danger" id="err-splash_slider_color" style="color: #9f0606; display: none">splash slider
                  color is
                  required</p>
              </div>
              <div class="form-group">
                <label>Splash Slider Font Color: </label>
                <input type="color" placeholder="Enter app splash slider font color" name="splash_slider_font_color"
                  id="splash_slider_font_color" class="form-control">
                <p class="text-danger" id="err-splash_slider_font_color" style="color: #9f0606; display: none">splash
                  slider font
                  color is required</p>
              </div>
              <div class="form-group">
                <label>Splash Slider Inactive Color: </label>
                <input type="color" placeholder="Enter app splash slider inactive color"
                  name="splash_slider_inactive_color" id="splash_slider_inactive_color" class="form-control">
                <p class="text-danger" id="err-splash_slider_inactive_color" style="color: #9f0606; display: none">
                  splash slider
                  inactive color is required</p>
              </div>
              <div class="form-group">
                <label>Adds</label>
                <label class="toggle">
                  <input class="toggle-checkbox custom-checkbox" type="checkbox" name="is_adds_true" id="is_adds_true">
                  <div class="toggle-switch"></div>
                  <span class="toggle-label"></span>
                </label>
              </div>
              <div class="form-group">
                <label>Active</label>
                <label class="toggle">
                  <input class="toggle-checkbox custom-checkbox" type="checkbox" name="is_active" id="is_active">
                  <div class="toggle-switch"></div>
                  <span class="toggle-label"></span>
                </label>
              </div>
            </div>
            <div class="modal-footer">
              <button type="reset" class="btn btn-light-secondary" data-bs-dismiss="modal">

                <span>Close</span>
              </button>
              <button type="submit" class="btn btn-dark" id="addButtton">

                <span>Add</span>
              </button>
            </div>
          </form>
        </div>
      </div>
    </div>

    <div class="modal fade text-left" id="updateAppModel" tabindex="-1" role="dialog" aria-labelledby="myModalLabel33"
      aria-hidden="true">
      <div class="modal-dialog modal-dialog-centered modal-dialog-scrollable" role="document">
        <div class="modal-content" style="overflow: scroll;">
          <div class="modal-header">
            <h4 class="modal-title" id="myModalLabel33">Update App</h4>
            <button type="button" class="close" data-bs-dismiss="modal" aria-label="Close">
              <i data-feather="x"></i>
            </button>
          </div>
          <form action="#" id="updateAppForm">
            <div class="modal-body">
              <div class="form-group">
                <label>Name: </label>
                <input type="text" placeholder="Enter app name" id="up-name" name="name" class="form-control" required>
              </div>
              <div class="form-group">
                <label>Image: </label>
                <input type="file" placeholder="Enter app image" name="image" id="up-image" class="form-control"
                  accept="image/x-png,image/gif,image/jpeg" onchange="handlePickImage(2)">
                <img id="showImage" style="width:200px;height: 200px;" />
              </div>
              <div class="form-group">
                <label>Sidebar</label>
                <label class="toggle">
                  <input class="toggle-checkbox custom-checkbox" type="checkbox" name="is_sidebar" id="up-is_sidebar">
                  <div class=" toggle-switch">
                  </div>
                  <span class="toggle-label"></span>
                </label>
              </div>
              <div class="form-group">
                <label>Bottombar</label>
                <label class="toggle">
                  <input class="toggle-checkbox custom-checkbox" type="checkbox" name="is_bottombar"
                    id="up-is_bottombar">
                  <div class="toggle-switch"></div>
                  <span class="toggle-label"></span>
                </label>
              </div>
              <div class="form-group">
                <label>Splash Slider Color: </label>
                <input type="color" placeholder="Enter app splash slider color" name="splash_slider_color"
                  id="up-splash_slider_color" class="form-control">
              </div>
              <div class="form-group">
                <label>Splash Slider Font Color: </label>
                <input type="color" placeholder="Enter app splash slider font color" name="splash_slider_font_color"
                  id="up-splash_slider_font_color" class="form-control">
              </div>
              <div class="form-group">
                <label>Splash Slider Inactive Color: </label>
                <input type="color" placeholder="Enter app splash slider inactive color"
                  name="splash_slider_inactive_color" id="up-splash_slider_inactive_color" class="form-control">
              </div>
              <div class="form-group">
                <label>Adds</label>
                <label class="toggle">
                  <input class="toggle-checkbox custom-checkbox" type="checkbox" name="is_adds_true"
                    id="up-is_adds_true">
                  <div class="toggle-switch"></div>
                  <span class="toggle-label"></span>
                </label>
              </div>
              <div class="form-group">
                <label>Active</label>
                <label class="toggle">
                  <input class="toggle-checkbox custom-checkbox" type="checkbox" name="is_active" id="up-is_active">
                  <div class="toggle-switch"></div>
                  <span class="toggle-label"></span>
                </label>
              </div>
              <input name="id" type="hidden" id="id">
            </div>
            <div class="modal-footer">
              <button type="button" class="btn btn-light-secondary" data-bs-dismiss="modal">

                <span>Close</span>
              </button>
              <button type="submit" class="btn btn-dark" id="updateButtton">

                <span>Update</span>
              </button>
            </div>
          </form>
        </div>
      </div>
    </div>

  </div>

  <script>
    function updateAppAdds(id, checked) {

      const is_adds_true = $('#up-is_adds_true').val()

      fetch(`/admin/apps/adds/${id}`, {
        method: "PATCH",
        body: JSON.stringify({ "is_adds_true": true }),
        mode: 'cors',
        cache: 'no-cache',
      })
        .then(async function (res) {
          const data = await res.json()
          if (data.success) {
            Toastify({
              text: "adds updated successfully.",
              duration: 1000,
              close: true,
              gravity: "top",
              position: "right",
              backgroundColor: "rgb(31 191 95)",
            }).showToast();
            $('#dataTable').DataTable().ajax.reload();
          }
          else {
            Swal.fire({
              icon: "error",
              title: "Oops...",
              text: "Something is wrong",
              confirmButtonColor: "#000000",
            })
          }
        })
        .catch(function (res) {
          console.log(res);
          Swal.fire({
            icon: "error",
            title: "Oops...",
            text: "Something is wrong",
            confirmButtonColor: "#000000",
          })
        })
    }

    function updateAppStatus(id, checked) {

      const is_active = $('#up-is_active').val();

      fetch(`/admin/apps/active-status/${id}`, {
        method: "PATCH",
        body: JSON.stringify({ "is_active": true }),
        mode: 'cors',
        cache: 'no-cache',
      })
        .then(async function (res) {
          const data = await res.json()
          if (data.success) {
            Toastify({
              text: "active status updated successfully.",
              duration: 1000,
              close: true,
              gravity: "top",
              position: "right",
              backgroundColor: "rgb(31 191 95)",
            }).showToast();
            $('#dataTable').DataTable().ajax.reload();
          }
          else {
            Swal.fire({
              icon: "error",
              title: "Oops...",
              text: "Something is wrong",
              confirmButtonColor: "#000000",
            })
          }
        })
        .catch(function (res) {
          console.log(res);
          Swal.fire({
            icon: "error",
            title: "Oops...",
            text: "Something is wrong",
            confirmButtonColor: "#000000",
          })
        })
    }


    function handlePickImage(pickFor) {
      let reader = new FileReader();
      switch (pickFor) {
        case 1:
          reader.readAsDataURL(document.getElementById('image').files[0]);
          reader.onload = function (e) {
            document.getElementById('imageAtCreate').src = e.target.result;
          }
          break;
        case 2:
          reader.readAsDataURL(document.getElementById('up-image').files[0]);
          reader.onload = function (e) {
            document.getElementById('showImage').src = e.target.result;
          }
      }

    }

    $(document).ready(function () {
      var table = $('#dataTable').DataTable({
        paging: true,
        responsive: true,
        searching: true,
        ajax: {
          type: "GET",
          url: "/admin/apps/data",
          dataSrc: "data",

        },
        columns: [
          {
            "data": null,
            "render": function (data, type, full, meta) {
              return meta.row + 1
            }
          },
          { "data": 'name' },
          {
            "data": 'image',
            render: function (data) {
              return '<img src="' + data + '" style="width:100px;height: 75px;">'
            }
          },
          { "data": 'splash_slider_color' },
          { "data": 'splash_slider_font_color' },
          { "data": 'splash_slider_inactive_color' },
          {
            "data": null,
            render: function (data, type, row) {
              const isChecked = row.is_adds_true === true;

              let content = '<td><div class="d-flex">';
              content += `<label class="toggle"><input class="toggle-checkbox data-toggle" id="${row.id}" type="checkbox" name="is_adds_true" ${isChecked ? 'checked' : ''}>`;
              content += `<div class="toggle-switch custom-data-checked" onclick="updateAppAdds(${row.id},${isChecked})"></div>`;
              content += '<span class="toggle-label"></span></label>';
              content += '</div></td>';
              return content;
            }
          },
          {
            "data": null,
            render: function (data, type, row) {
              let content = `<td><div class="d-flex">`
              if (row.is_adds_true) {
                content = content +
                  `<a href="/admin/apps/${row.id}"  class="view" style = "color: blue;" > view adds</a >`
              }
              content = content + `</div ></td > `
              return content
            }
          },
          {
            "data": null,
            render: function (data, type, row) {
              const isChecked = row.is_active === true;

              let content = '<td><div class="d-flex">';
              content += `<label class="toggle"><input class="toggle-checkbox data-toggle" id="${row.id}" type="checkbox" name="is_active" ${isChecked ? 'checked' : ''}>`;
              content += `<div class="toggle-switch custom-data-checked" onclick="updateAppStatus(${row.id},${isChecked})"></div>`;
              content += '<span class="toggle-label"></span></label>';
              content += '</div></td>';
              return content;
            }
          },
          {
            "data": null,
            render: function (data, type, row) {
              let content = `<td><div class="d-flex">`
              content = content +
                '<a href="#"  class="edit" data-value ="' + row.id + '" data-bs-toggle="modal" data-bs-target="#updateAppModel"><i class="fas fa-edit" style="color: #000000;"></i></a>'
              content = content +
                '<a href="#"  class="delete" data-value ="' + row.id + '" style="margin-left: 30px;"><i class="fa-regular fa-trash-can" aria-hidden="true"  style="color: red;"></i></a>'
              content = content + `</div></td>`
              return content
            }
          }
        ]
      });

      $(".custom-checkbox").on('click', function () {
        if ($(this).is(':checked')) {
          $(this).attr('value', 'true');
        }
        else {
          $(this).attr('value', 'false');
        }
      });

      $("#is_sidebar").on('change', function () {
        let isChecked = $(this).is(':checked');
        // console.log('side on change', isChecked);
        // $("#is_sidebar").prop('checked', isChecked);
        $("#is_bottombar").prop('checked', !isChecked);
      })

      $("#is_bottombar").on('change', function () {
        let isChecked = $(this).is(':checked');
        // console.log('bottom on change', isChecked);
        // $("#is_bottombar").prop('checked', isChecked);
        $("#is_sidebar").prop('checked', !isChecked);
      })

      $('#addButtton').click(function (e) {
        e.preventDefault();

        const name = $('#name').val()
        const image = $('#image')
        const is_sidebar = $('#is_sidebar').val()
        const is_bottombar = $('#is_bottombar').val()
        const splash_slider_color = $('#splash_slider_color').val()
        const splash_slider_font_color = $('#splash_slider_font_color').val()
        const splash_slider_inactive_color = $('#splash_slider_inactive_color').val()
        const is_adds_true = $('#is_adds_true').val()
        const is_active = $('#is_active').val()

        var form = $('#addAppForm')[0];
        var formData = new FormData(form);

        fetch(`/admin/apps`,
          {
            method: "POST",
            body: formData,
            mode: 'cors',
            cache: 'no-cache',
          })
          .then(async function (res) {
            const data = await res.json()
            if (data.success) {
              $('#addAppModel').modal('hide');
              Swal.fire({
                icon: "success",
                title: "Success",
                text: "app added successfully.",
                timer: 1000,
                showConfirmButton: false
              })
              table.ajax.reload();
            }
            else {
              Swal.fire({
                icon: "error",
                title: "Oops...",
                text: "Something is wrong",
                confirmButtonColor: "#000000",
              })
            }
          })
          .catch(function (res) {
            console.log(res);
            Swal.fire({
              icon: "error",
              title: "Oops...",
              text: "Something is wrong",
              confirmButtonColor: "#000000",
            })
          })
      })

      $('#addAppModel').on('show.bs.modal', function (event) {
        $("#addAppForm").trigger("reset");
        $('#image').val("")
      })
      $('#updateAppModel').on('show.bs.modal', function (event) {
        $('#up-image').val("")
      })
    })

    $(document).on('click', '.edit', function (e) {
      e.preventDefault()

      var appId = $(this).data('value')
      fetch(`/admin/apps/view/${appId}`)
        .then(response => response.json())
        .then((data) => {
          const { name, image, code, splash_slider_color, splash_slider_font_color, splash_slider_inactive_color, is_sidebar, is_bottombar, is_adds_true, id } = data.data
          $('#id').val(id)
          $('#up-name').val(name)
          $('#showImage').prop("src", image);
          $('#up-splash_slider_color').val(splash_slider_color)
          $('#up-splash_slider_font_color').val(splash_slider_font_color)
          $('#up-splash_slider_inactive_color').val(splash_slider_inactive_color)
          if (is_sidebar) {
            $("#up-is_sidebar").prop("checked", true);
          } else {
            $("#up-is_sidebar").prop("checked", false);
          }
          if (is_bottombar) {
            $("#up-is_bottombar").prop("checked", true);
          } else {
            $("#up-is_bottombar").prop("checked", false);
          }
          if (is_adds_true) {
            $("#up-is_adds_true").prop("checked", true);
          } else {
            $("#up-is_adds_true").prop("checked", false);
          }
          if (is_active) {
            $("#up-is_active").prop("checked", true);
          } else {
            $("#up-is_active").prop("checked", false);
          }
        })
        .catch((err) => console.log(err))
    })

    $("#up-is_sidebar").on('click', function () {
      let isChecked = $(this).is(':checked');
      // console.log('update side on change', isChecked);
      // $("#up-is_sidebar").prop('checked', isChecked);
      $("#up-is_bottombar").prop('checked', !isChecked);
    })

    $("#up-is_bottombar").on('click', function () {
      let isChecked = $(this).is(':checked');
      // console.log('update bottom on change', isChecked);
      // $("#up-is_bottombar").prop('checked', isChecked);
      $("#up-is_sidebar").prop('checked', !isChecked);
    })

    $('#updateButtton').click(function (e) {
      e.preventDefault();

      const appId = $('#id').val()
      const name = $('#up-name').val()
      const image = $('#up-image')
      const is_sidebar = $('#up-is_sidebar').val()
      const is_bottombar = $('#up-is_bottombar').val()
      const splash_slider_color = $('#up-splash_slider_color').val()
      const splash_slider_font_color = $('#up-splash_slider_font_color').val()
      const splash_slider_inactive_color = $('#up-splash_slider_inactive_color').val()
      const is_adds_true = $('#up-is_adds_true').val()
      const is_active = $('#up-is_active').val()
      var form = $('#updateAppForm')[0];
      var formData = new FormData(form);

      fetch(`/admin/apps/${appId}`, {
        method: "PUT",
        body: formData,
        mode: 'cors',
        cache: 'no-cache',
      })
        .then(async function (res) {
          const data = await res.json()
          if (data.success) {
            $('#updateAppModel').modal('hide');
            Toastify({
              text: "app updated successfully.",
              duration: 1000,
              close: true,
              gravity: "top",
              position: "right",
              backgroundColor: "rgb(31 191 95)",
            }).showToast();
            $('#dataTable').DataTable().ajax.reload();
          }
          else {
            Swal.fire({
              icon: "error",
              title: "Oops...",
              text: "Something is wrong",
              confirmButtonColor: "#000000",
            })
          }
        })
        .catch(function (res) {
          console.log(res);
          Swal.fire({
            icon: "error",
            title: "Oops...",
            text: "Something is wrong",
            confirmButtonColor: "#000000",
          })
        })
    })

    $(document).on('click', '.delete', function () {
      const id = $(this).data('value')

      Swal.fire({
        title: "Are you sure about deleting this app?",
        icon: "warning",
        showCancelButton: true,
        confirmButtonText: "Delete",
        confirmButtonColor: "#000000",
        cancelButtonColor: "#999999",
        reverseButtons: true,
        focusConfirm: false,
        focusCancel: true,
      })
        .then((e) => {
          if (e.isConfirmed) {
            fetch(`/admin/apps/${id}`,
              {
                method: "DELETE",
                mode: 'cors',
                cache: 'no-cache',
                headers: {
                  'Content-Type': 'application/json'
                },
              })
              .then(async function (res) {
                const data = await res.json()
                if (data.success) {
                  Toastify({
                    text: "app deleted successfully.",
                    duration: 1000,
                    close: true,
                    gravity: "top",
                    position: "right",
                    backgroundColor: "rgb(245 90 90)",
                  }).showToast();
                  $('#dataTable').DataTable().ajax.reload();
                }
                else {
                  Swal.fire({
                    icon: "error",
                    title: "Oops...",
                    text: "Something is wrong",
                    confirmButtonColor: "#000000",
                  })
                }
              })
              .catch(function (res) {
                console.log(res);
                Swal.fire({
                  icon: "error",
                  title: "Oops...",
                  text: "Something is wrong",
                  confirmButtonColor: "#000000",
                })
              })
          }
        })
    })

  </script>

  <%- include('../layouts/footer') %>